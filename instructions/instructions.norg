* Cell instructions
** PUSH `<value>`:
   - sets the current cell to the value and advances
** PULL:
   - prints the current cells value
** READ:
   - takes user input and pushes it to the current cell
** POP:
   - resets the current cell to zero

* Arithmetic instructions
** ADD:
   - adds the current cell to the one before it
** SUB:
   - subtracts the current cell from the one before it
** MUL:
   - multiplies the current cell with the one before it
** DIV:
   - divides the cell before with the current one

* Label instructions
** LABEL `<label name>`:
   - creates a label with the name `<label name>`
   - a collection of instructions that you can jump to later on
   - ends with a 'END' instruction
** JUMP `<label name>`:
   - jumps to the label that has the name `<label name>`
   - nothing after jump gets executed
  
* If instructions
** IF.EQ `<value>`:
   - if `<current cell> == <value>` is true then it executes its body
** IF.NE `<value>`:
   - if `<current cell> != <value>` is true then it executes its body
** IF.LT `<value>`:
   - if `<current cell> < <value>` is true then it executes its body
** IF.GT `<value>`:
   - if `<current cell> > <value>` is true then it executes its body
** IF.EQ `<value>`:
   - if `<current cell> <= <value>` is true then it executes its body
** IF.EQ `<value>`:
   - if `<current cell> >= <value>` is true then it executes its body
** Each one ends with a 'FI' instruction

* Raylib instructions
** RL:INIT `<width index> <height index>`:
   - inititalizes a window
   - the width and height are contained in their own cell
** RL:FPS `<target fps>`:
   - sets target fps
   - the target fps is also contained as a cell in the stack
** RL:CLOSE:
   - closes the window
** RL:BEGINDRAWING:
   - executes the raylib BeginDrawing function
** RL:ENDDRAWING:
   - executes the raylib EndDrawing function
** RL:CLEAR `<color>`:
   - clears the screen and sets the background color to `<color>`
   - right now only white is supported as a color
** RL:FORCLOSE:
   - a loop that will only end when the window should close
   - ends with a 'ROF' instructions
** RL:EXEC:
   - executes the raylib code generated by the instructions defined before
** RL:SAMPLEDRAW:
   - a sample program to put inside the 'RL:FORCLOSE' loop

* Print instructions
** PRINTS:
   - prints the current stack
** PRINT `<index>`:
   - prints a cell from the stack based on the `<index>`

* Simple instructions
** ADV:
   - advances the stack pointer by one
** DADV:
   - deadvances the stack pointer by one
** END:
   - ends the program

* Etc.
** Comments
   - comments are lines that start with '#'
** Stack based execution:
   - a stack in this context is an array of cells
   - each cell holds an integer value
   - the current cell is the cell at the index of the stack pointer
   - most instructions manipulate the stack
